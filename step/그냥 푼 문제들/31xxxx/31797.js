/*
아~파트 아파트
https://www.acmicpc.net/problem/31797

문제
부산대학교 정보컴퓨터공학부는 매년 봄 MT를 떠난다. 봄 MT에 간 산지니는 아파트라는 술게임을 배웠다.

게임을 시작한 사람이 아파트의 층수 
$N$을 정한다.
게임의 모든 참가자는 자신의 두 손을 다른 사람과 겹치지 않는 높이로 뻗어 모든 참가자의 두 손이 서로 쌓이도록 한다.
가장 아래에 있는 손을 빼 쌓여있는 손 가장 위에 쌓는다.
3.의 과정을 
$N$번 반복한다. 
$j$번째로 쌓은 손이 
$j$층이 된다.
 
$N$층을 쌓는 참가자가 술을 마시고 게임이 종료된다.
새내기인 산지니는 누가 술을 마시게 될 지 궁금해졌다. 산지니를 위해 누가 술을 마시게 될 지 구해주자.

입력
첫 번째 줄에 아파트의 층수 
$N$, 참가자의 수 
$M$이 공백으로 구분되어 주어진다. 
$(1 \leq N, M \leq 1\,000)$ 

두 번째 줄부터 
$M+1$번째 줄까지 
$i$번 참가자의 두 손의 높이 
$H_{1,i}$, 
$H_{2,i}$가 공백으로 구분되어 주어진다. 
$(1 \leq H_{1,i}, H_{2, i} \leq 10\,000)$

어떤 두 손도 같은 높이인 경우는 주어지지 않는다. 모든 입력은 정수이다.

출력
술을 마시게 될 사람의 번호를 출력한다.

예제 입력 1 
5 3
1 6
3 4
2 5
예제 출력 1 
3
*/

// 높이라는 게 층수라는 상관이 없는 거라서...
// 높이는 1부터 10000까지 가능하다.
// 즉, 특정 높이는 아무 손도 없을 가능성이 있다.

const fs = require("fs");
const [first, ...second] = fs
  .readFileSync("/dev/stdin")
  .toString()
  .trim()
  .split("\n");

const [n, m] = first.split(" ").map(Number);

const apt = new Array(10001).fill(0);

second.forEach((e, idx) => {
  const [n1, n2] = e.split(" ").map(Number);

  apt[n1] = apt[n2] = idx + 1;
});

apt.shift();

for (let i = 0; i < n; i++) {
  while (apt[0] === 0) {
    // 특정 높이에 아무 손도 없을 경우, 그 부분을 제거하는 코드.
    apt.shift();
  }
  apt.push(apt.shift());
}

console.log(apt.at(-1));
